"========================================
"
"Bundle stuff  = = = = = = = = = = = = = 
"========================================
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins

"Plugin 'https://github.com/Raimondi/delimitMate.git' 
    "Auto close Quotes, parenthesis etc

Plugin 'https://github.com/Raimondi/delimitMate.git'
    "Auto close Quotes, parenthesis etc breaks iabbr

Plugin 'https://github.com/vim-scripts/Align.git'
    " Aligns the lines depending on command 

Plugin 'https://github.com/scrooloose/nerdtree.git'
    " File tree type file manager

Plugin 'https://github.com/tpope/vim-surround.git'
    " Used to surround codes with tags and pars

Plugin 'jistr/vim-nerdtree-tabs'
    " Creates tabs like real GUI editors

Plugin 'https://github.com/Yggdroot/indentLine.git'	
    " Shows the indentation wihtgiven char 

Plugin 'https://github.com/Valloric/MatchTagAlways.git'
    " Lights up the matching tags

Plugin 'https://github.com/tomtom/tcomment_vim.git'
    "Commenting get lot easier with this on

Plugin 'https://github.com/Valloric/YouCompleteMe.git'
    "You complete me for C and C++ complitation

Plugin 'jelera/vim-javascript-syntax'
    "Javascript highlighting

Plugin 'https://github.com/mattn/emmet-vim'
    "Emmet for html, css 

Plugin 'https://github.com/marijnh/tern_for_vim.git'
    "JS auto complete
Plugin 'https://github.com/beyondmarc/opengl.vim'
    "Opengl Syntax
    
Plugin 'https://github.com/tpope/vim-fugitive'
    "Git Plugin

Plugin 'tmhedberg/SimpylFold'
    " python fold

Plugin 'https://github.com/altercation/vim-colors-solarized'
    " Solarized color

Plugin 'https://github.com/tmhedberg/matchit'

Plugin 'https://github.com/terryma/vim-multiple-cursors'
    " Multiple cursors

Plugin 'majutsushi/tagbar'
    " cpp sturcture

Plugin 'ervandew/supertab'
    " does evrything with tab

Plugin 'MarcWeber/vim-addon-mw-utils' "Snipmate
Plugin 'tomtom/tlib_vim'              "Snipmate
Plugin 'garbas/vim-snipmate'          "Snipmate
Plugin 'honza/vim-snippets'           "Snipmate
    "Completes functions with tab

    "Commented cz not working
" Plugin 'Shougo/vimproc'              "PHP-Complete-ex
" Plugin 'Shougo/unite.vim'            "PHP-Complete-ex
" Plugin 'm2mdas/phpcomplete-extended' "PHP-Complete-ex
    " Complete PHP syntex wiht dropdo

Plugin 'morhetz/gruvbox'
    " gruvbox Colorscheme

call vundle#end()            " required
filetype plugin indent on    " required


"=======================================
" Plugin Configs  = = = = = = = = = = = 
"=======================================
let g:indentline_color_gui = '#000000'
let g:indentLine_char = '•'       " Char that indicates the indent
imap xx <esc>a<Plug>snipMateNextOrTrigger
smap xx <Plug>snipMateNextOrTrigger
autocmd  FileType  php setlocal omnifunc=phpcomplete_extended#CompletePHP
nnoremap <CR> :noh<CR><CR>
nnoremap d "_d
nnoremap , :tabp<CR>
nnoremap . :tabn<CR>
let g:ycm_error_symbol = '•>'
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_confirm_extra_conf = 0
imap yy <C-Y>,
smap yy <C-Y>,

"Powerline 
set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/

" Always show statusline
set laststatus=2

" Use 256 colours (Use this setting only if your terminal supports 256 colours)
set t_Co=256

"=======================================
" key mapings  = = = = = = = = = = = = =
"=======================================
:map ; :
nmap <Esc><Esc> <Esc>:wa<CR>
nmap <F4> <Esc>:q<CR>
nmap <C-J> o<Esc>
nmap <C-K> O<Esc>
nmap <C-W> <C-W><C-W>
nmap <F8> :TagbarToggle<CR>
inoremap ;; <ESC>A;<ESC>o
inoremap {<CR> {<CR>}<C-o>O
inoremap <C-Space> <C-x><C-o>
inoremap <C-@> <C-Space>

"=======================================
" Abbriviations  = = = = = = = = = = = =
"=======================================
iab #i #include <><ESC>i
iab mainf int main(){<CR>return 0;<ESC><S-O>
iab usi using namespace std;;
iab ct cout<<|
iab ci cin>>|

" maping for saving and compiling wiht F5 key
autocmd filetype python nnoremap <F5> <ESC> :w <bar> exec '!python '.shellescape('%')<CR>
autocmd filetype c nnoremap <F5> <ESC> :w <bar> exec '!gcc '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>
autocmd filetype cpp nnoremap <F5> <ESC> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>
autocmd filetype cpp nnoremap <F6> <ESC> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').' -lGL -lGLU -lGLEW -lglut -lm && ./'.shellescape('%:r')<CR>
autocmd filetype c nnoremap <F6> :w <bar> exec '!gcc '.shellescape('%').' -o '.shellescape('%:r').' -lGL -lGLU -lGLEW -lglut -lm && ./'.shellescape('%:r')<CR>

"=======================================
"Visual Stuff  = = = = = = = = = = = = =
"=======================================
colorscheme heroku-terminal  "Set the color seheme
set background=dark          " Setting dark mode
set relativenumber
au FocusGained * set relativenumber           " Show relative line number
au FocusLost * set norelativenumber " Show line number
au FocusLost * set number " Show line number
autocmd InsertEnter * :set norelativenumber 
autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber
set mouse=a                  " Mouse support on console
set cursorline cursorcolumn  " Hilights the line with cursor
set hlsearch                 " Highlight this that we search
set foldmethod=syntax        " Set line fold method depending on syntax
set synmaxcol=150            " No systax color for raw text

if has("gui_running")       " GUI only Configs
    set lines=999 columns=999    " Start fullscreen
    set guioptions-=T            " No toolber in GUI
    set guifont=Source\ Code\ Pro\ for\ Powerline\ 12 " GUI font and size
    colorscheme kalisi "Set the GUI color seheme
endif

set wrap                     " soft-wrap lines
set showbreak=------>        " prefix for soft-wrapped lines (no actual line break character)
set cpoptions+=n
set lazyredraw

"=======================================
"Editing Stuff  = = = = = = = = = = = = 
"=======================================
set autoindent    " Auto indent
set smartcase     " Smartly consider case in search
set ignorecase    " Ingore case in funtions
set shiftwidth=4  " Set 4 char tab
set softtabstop=4 " set 4 char tab
set incsearch     " incremental serch
set expandtab     " replace tab char with space
set smarttab      " replace tab char with space

